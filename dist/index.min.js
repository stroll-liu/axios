!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).SJC=t()}(this,(function(){"use strict";const e=require("axios");return class{config;lineUp;errTimeout;instance;errorArr;antiShake;constructor(e){this.config={method:"get",timeout:3e3,antiShakeTime:null,isAntiShake:!0,url:"",baseURL:"",prompt:!0,withCredentials:!1,headers:{},data:{},params:{},message:null,reqFn:null,resFn:null,await:null},this.lineUp={switch:!1,timeout:null,await:[],first:[],after:[]},this.errTimeout=null,this.errorArr=[],this.antiShake=[],Object.assign(this.config,e),this.config.await&&this.config.await.length&&(this.config.switch=!0,this.config.await.forEach((e=>{const t=JSON.stringify(e);this.lineUp.await.push(t)}))),this.interceptors()}async reset(e){e&&Object.assign(this.config,e)}async interceptors(){return new Promise((t=>{this.instance=e.create({}),this.instance.interceptors.request.use((async e=>(this.config.reqFn&&await this.config.reqFn(e),e)),(e=>Promise.reject(e))),this.instance.interceptors.response.use((async e=>(this.config.resFn&&await this.config.resFn(e),e)),(e=>((e.message.includes("timeout")||e.message.includes("Network Error"))&&(console.error("网络异常，请重新尝试"),this.config.message&&this.config.message({showClose:!0,message:"网络异常，请重新尝试",type:"error"})),Promise.reject(e)))),t(!0)})).catch((e=>(console.log(e),e)))}errorHandling(){clearTimeout(this.errTimeout),this.errTimeout=setTimeout((()=>{this.errorArr.forEach((e=>{e.type&&(e.type=0,this.config.message&&this.config.message({showClose:!0,message:e.val,type:"error"}))})),this.errorArr.length=0}),500)}getError(e,t){if(e.code&&t)if(this.errorArr.length){!this.errorArr.every((t=>t.val===e.message))&&this.errorArr.push({type:1,val:e.message})}else this.errorArr.push({type:1,val:e.message})}clearAntiShake(e){this.config.isAntiShake&&setTimeout((()=>{delete this.antiShake[e]}),this.config.antiShakeTime||this.config.timeout)}parade(e){const{method:t,url:i}=e,s=JSON.stringify({method:t,url:i});this.lineUp.await.includes(i)||this.lineUp.await.includes(s)?this.lineUp.first.push(this.Request(e)):this.lineUp.after.push(e),clearTimeout(this.lineUp.timeout),this.lineUp.timeout=setTimeout((()=>{Promise.all(this.lineUp.first).then((()=>{this.lineUp.after.forEach((e=>{this.Request(e)})),this.lineUp.first.length=0,this.lineUp.after.length=0})).catch((e=>{console.log(e,{...e}),this.lineUp.first.length=0,this.lineUp.after.length=0})),this.config.switch=!1}),500)}Request(e){e=e||{};const{url:t=this.config.url,method:i=this.config.method,timeout:s=this.config.timeout,baseURL:r=this.config.baseURL,prompt:n=this.config.prompt,withCredentials:o=this.config.withCredentials,headers:a=this.config.headers,data:h=this.config.data,params:c=this.config.params}=e,l=JSON.stringify(e);if(this.config.isAntiShake){if(this.antiShake[l])return Promise.reject({showClose:!0,code:3003,message:`重复请求: ${i} ${t}`,params:e,type:"error"});this.antiShake[l]=!0}return this.errorHandling(),new Promise(((e,u)=>{this.instance({baseURL:r,withCredentials:o,method:i,url:t,timeout:s,headers:a,data:h,params:c}).then((t=>{this.getError(t.data,n),this.clearAntiShake(l),e(t.data)})).catch((e=>(this.clearAntiShake(l),u(e),e)))}))}GetByUrl(e,t,i,s){return this.Request({method:"get",url:e,timeout:s,prompt:i,params:t})}PostByUrl(e,t,i,s){return this.Request({method:"post",url:e,timeout:s,prompt:i,params:t})}GetByBody(e,t,i,s){return this.Request({method:"get",url:e,timeout:s,prompt:i,headers:{"content-type":"application/json"},data:t})}PostByBody(e,t,i,s){return this.Request({method:"post",url:e,timeout:s,prompt:i,headers:{"content-type":"application/json"},data:t})}}}));
